@page "/Runner/Details"

@using ChaseRacer.Models;
@using Microsoft.AspNetCore.Components.Web;
@using ChaseRacer.Data;
@using Microsoft.AspNetCore.Blazor;

@inject NavigationManager navigationManager
@inject ILegData legData
@inject IRunnerData runnerData


<div class="card">
    <div class="card-header">
        <span>Leg @SelectedLeg.LegNumber</span>
    </div>
    <div class="card-body container">
        <div class="row">
            <div class="col-4">Leg Distance: </div>
            <div class="col-8"> @SelectedLeg.LegDistance miles</div>
        </div>
        <div class="row">
            <div class="col-4">Leg: </div>
            <div class="col-8">
                <div>
                    <select id="Legs" class="custom-select" @onchange="(e => SetLeg(e))">
                        @foreach (var item in legData.GetLegs())
                        {
                            <option value="@item.LegNumber">Leg @item.LegNumber - @item.LegDistance miles</option>
                        }
                    </select>
                </div>
            </div>
        </div>
    </div>
    <div class="card-footer container">
        <div class="row">
            @if (runner != null)
            {
                <div>@runner.NickName runs @(runner.PaceMinutes * 60 + runner.PaceSeconds) seconds/mile</div>
                <div>@runner.NickName would run Leg @SelectedLeg.LegNumber in @(SelectedLeg.LegDistance*(runner.PaceMinutes * 60 + runner.PaceSeconds)/60) minutes</div>
            }
        </div>
    </div>
</div>


@code {
    [Parameter]
    public int id { get; set; }
    string queryId;
    Runner runner;
    int LegOption;
    Leg SelectedLeg { get; set; } = new Leg();

    void SetLeg(ChangeEventArgs e)
    {
        var id = Int32.Parse(e.Value.ToString());
        SelectedLeg = legData.GetLeg(id);
    }

    protected override void OnInitialized()
    {
        var uri = new Uri(navigationManager.Uri);
        queryId = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query).TryGetValue("id", out var type) ? type.First() : "";

        var id = Int32.Parse(queryId.ToString());
        runner = runnerData.GetRunner(id);
    }
}
